name: Deploy to AWS S3

# 当推送到 main 分支时触发
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 检出代码
    - name: Checkout
      uses: actions/checkout@v4
    
    # 2. 配置 AWS CLI
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    # 3. 上传所有静态文件并设置公有读权限
    - name: Upload all static files with public-read permissions
      run: |
        echo "Uploading all static files with public-read permissions..."
        
        # 同步上传所有静态网站文件，设置公有读权限，并排除不需要的文件
        aws s3 sync ./ s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ \
          --acl public-read \
          --delete \
          --exclude ".git/*" \
          --exclude ".github/*" \
          --exclude "node_modules/*" \
          --exclude ".DS_Store" \
          --exclude "*.md" \
          --exclude "README*" \
          --exclude "LICENSE*" \
          --exclude "*.yml" \
          --exclude "*.yaml" \
          --exclude ".env*" \
          --exclude "*.zip" \
          --exclude "*.tar" \
          --exclude "*.gz" \
          --exclude "package*.json" \
          --exclude "tsconfig.json" \
          --exclude "webpack.config.js" \
          --exclude "gulpfile.js" \
          --exclude "Gruntfile.js" \
          --exclude ".gitignore" \
          --exclude ".gitattributes" \
          --exclude ".editorconfig" \
          --exclude ".eslintrc*" \
          --exclude ".prettierrc*" \
          --exclude "*.log"
        
        echo "✅ All static files uploaded with public-read permissions"
        echo "📁 Supported file types: HTML, CSS, JS, PNG, JPG, GIF, SVG, WOFF, TTF, JSON, XML, PDF, etc."
    
    # 4. AWS S3 会自动设置正确的 Content-Type，无需手动干预
    - name: Verify content types (AWS S3 handles this automatically)
      run: |
        echo "✅ AWS S3 static website hosting automatically handles Content-Type"
        echo "   - HTML files: text/html"
        echo "   - CSS files: text/css" 
        echo "   - JS files: application/javascript"
        echo "   - Images: image/jpeg, image/png, etc."
    
    # 5. 验证上传结果
    - name: Verify upload and timestamps
      run: |
        echo "Verifying uploaded files and timestamps..."
        aws s3 ls s3://${{ secrets.S3_BUCKET_NAME }}/ --recursive
        
        echo "Checking specific files info..."
        aws s3api head-object --bucket ${{ secrets.S3_BUCKET_NAME }} --key index.html || echo "Could not get index.html info"
        aws s3api head-object --bucket ${{ secrets.S3_BUCKET_NAME }} --key css/styles.css || echo "Could not get styles.css info" 
        aws s3api head-object --bucket ${{ secrets.S3_BUCKET_NAME }} --key js/app.js || echo "Could not get app.js info"
        aws s3api head-object --bucket ${{ secrets.S3_BUCKET_NAME }} --key js/config.js || echo "Could not get config.js info"
        
        echo "Upload verification completed"
    
    # 6. 清理缓存（如果以后使用 CloudFront）
    - name: Invalidate CloudFront cache (optional, for future use)
      continue-on-error: true
      run: |
        echo "CloudFront invalidation step (currently disabled)"
        echo "To enable: uncomment and set CLOUDFRONT_DISTRIBUTION_ID secret"
        # aws cloudfront create-invalidation \
        #   --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
        #   --paths "/*"
    
    # 7. 部署成功
    - name: Deploy Success
      run: |
        echo "🎉 部署成功!"
        echo ""
        echo "📁 上传的文件："
        aws s3 ls s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ --recursive | head -20
        echo ""
        echo "🌐 网站访问地址:"
        echo "   ✅ S3 静态网站端点: http://${{ secrets.AWS_S3_BUCKET_NAME }}.s3-website.${{ secrets.AWS_REGION }}.amazonaws.com"
        echo "   📱 移动端友好: 响应式设计已启用"
        echo ""
        echo "✅ 所有文件已同步并设置为公有读权限"
        echo "✅ AWS S3 自动处理 Content-Type，无需手动设置"
        echo "✅ 使用同步模式，只上传变化的文件"
        echo ""
        echo "📝 已排除的文件类型："
        echo "   - 开发工具配置文件 (.gitignore, package.json, etc.)"
        echo "   - 源码管理文件 (.git, .github)"
        echo "   - 临时文件 (.DS_Store, *.log, node_modules)"
        echo ""
        echo "⚠️  下一步建议："
        echo "   1. 配置自定义域名指向 S3 端点"
        echo "   2. 考虑添加 CloudFront CDN 以启用 HTTPS"
        echo "   3. 设置域名 DNS CNAME 记录"
